#!/bin/bash

# Copyright 2017-2018 Matthew A. Clapp
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# first test if uname is present
if hash uname 2>/dev/null ; then
    # uname is present, use it to find ostype
    ostype="$(uname)"
else
    # uname is not present, where are we??
    ostype="UNKNOWN"
fi
# make sure we're on Mac
if [ "$ostype" != "Darwin" ] ; then
    echo "ERROR: OS is not macOS.  gen_app only applicable to macOS"
    echo "Aborting."
    exit 1
fi

# TODO: use 'git describe --tags' if we can figure out how to get Jenkins
#   to not do a shallow clone, and have tags.
# https://stackoverflow.com/a/45993185

# add current git hash to VERSION_STR in const.py, saving backup file

# Get tag if current hash itself is tagged
gittag=(`git tag --points-at HEAD`)
if [[ -z "$gittag" ]]; then
    # Empty git tag means we are not on a release.  Provide short hash.
    githash=(`git rev-parse --short HEAD`)
else
    # Non-empty git tag means we are on a release.  Indicate that
    githash="RELEASE $gittag"
fi

# make backup of orig const.py
cp marcam/const.py marcam/const.py.bak

# modify const.py VERSION_STR = ""
# perl switches:
#   -i edit file in place
#   -p construct while (<>) { <one-line-prog> } continue { print }
#   -e execute the following line, accepting multiple arguments after
# after escaping to get through bash "", the regex will be to perl:
#   s/VERSION_STR = .*$/VERSION_STR = "$githash"/
perl -i -pe "s/VERSION_STR = .*$/VERSION_STR = \"$githash\"/" marcam/const.py

# check if const.py got corrupted
syntax_error=(`python3 -m py_compile marcam/const.py`)
if [ ! -z "$syntax_error" ]; then
    echo "gen_app corrupted marcam/const.py"
    exit 1
fi

# activate virtual environment for python
source virt/bin/activate

# build app using pyinstaller
pyinstaller build_scripts/marcam_macos.spec

# copy original Info.plist
cp build_scripts/Info.plist dist/Marcam.app/Contents/

# move back original const.py file
mv marcam/const.py.bak marcam/const.py
